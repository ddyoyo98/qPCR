dim(se@assays@data$counts)
dim(gse@assays@data$counts)
save(se@assays@data$counts, file = "output/data/unsumm_counts.txt")
samples <- read_csv("rnaseq_samples.csv")
se <- tximeta(samples)
gse <- summarizeToGene(se)
save(se@assays@data$counts, file = "output/data/unsumm_counts.txt")
unsumm_counts <- se@assays@data$counts
summ_counts <- gse@assays@data$counts
save(unsumm_counts, file = "output/data/unsumm_counts.txt")
save(summ_counts, file = "output/data/summ_counts.txt")
blah <- read.delim("output/data/summ_counts.txt")
View(blah)
remove(blah)
unsumm_counts <- se@assays@data$counts
summ_counts <- gse@assays@data$counts
write.csv(unsumm_counts, file = "output/data/unsumm_counts.csv")
write.csv(summ_counts, file = "output/data/summ_counts.csv")
blah <- read.csv("output/data/summ_counts.csv")
View(blah)
blah <- read.csv("output/data/summ_counts.csv", header = T)
View(blah)
blah <- read.csv("output/data/summ_counts.csv", header = TRUE)
View(blah)
blah <- read.delim("output/data/summ_counts.csv", header = TRUE, sep = ",")
View(blah)
# project.dir <- "/share/biocore/projects/Miller_L_UCD/Haigh_Miller_Mouse_RNASeq/"
counts <- summ_counts
View(counts)
View(samples)
pdata <- read.delim(file.path("pdata.txt"))
View(pdata)
pdata <- subset(samples, colnames(samples) == c("names", "condition"))
pdata$sample <- samples$names
pdata$group <- samples$condition
View(pdata)
pdata$sample <- samples$names
pdata$group <- samples$condition
pdata$sample <- as.character(pdata$sample)
pdata$Exposure <- unlist(lapply(strsplit(pdata$group, split = " "), `[`, 1))
pdata$Exposure <- relevel(factor(pdata$Exposure), ref = "FA")
se <- readRDS("~/ETS04/rnaseq/RData/se.RDS")
knitr::opts_chunk$set(echo = F, message = F)
# project.dir <- "/share/biocore/projects/Miller_L_UCD/Haigh_Miller_Mouse_RNASeq/"
counts <- readRDS("../rnaseq/RData/gse.RDS")
View(counts)
counts <- counts@assays@data$counts
View(counts)
knitr::opts_chunk$set(echo = F, message = F)
library(dplyr)
library(edgeR)
library(emmeans)
library(knitr)
library(kableExtra)
library(ggplot2)
# project.dir <- "/share/biocore/projects/Miller_L_UCD/Haigh_Miller_Mouse_RNASeq/"
counts <- readRDS("../rnaseq/RData/gse.RDS")
counts <- counts@assays@data$counts
colnames(counts) <- unlist(lapply(strsplit(colnames(counts), split = "_", fixed = T), "[", 1))
anno <- read.delim("mart_export_2021-04-29.txt")
pdata <- read.delim(file.path("pdata.txt"))
pdata$sample <- as.character(pdata$sample)
pdata$Exposure <- unlist(lapply(strsplit(pdata$group, split = " "), `[`, 1))
pdata$Exposure <- relevel(factor(pdata$Exposure), ref = "FA")
pdata$Challenge <- unlist(lapply(strsplit(pdata$group, split = " "), `[`, 2))
pdata$Challenge <- relevel(factor(pdata$Challenge), ref = "PBS")
# Reorder pdata to match colnames of counts
pdata <- left_join(data.frame(sample = colnames(counts)),
pdata)
identical(pdata$sample, colnames(counts))
d0 <- DGEList(counts)
d0 <- calcNormFactors(d0)
# tmp <- as.data.frame(cpm(d0))
# tmp$Gene.stable.ID <- unlist(lapply(strsplit(rownames(tmp), split = ".", fixed = T), `[`, 1))
# tmp <- left_join(tmp, anno)
# tmp <- dplyr::select(tmp, Gene.stable.ID, Gene.name, everything()) %>% select(- Gene.description)
# write.table(tmp, file = "normalized_counts.txt", quote = F, sep = "\t", row.names = F)
cutoff <- 6
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d)
coords <- plotMDS(d, plot = F)
plotdat <- pdata
plotdat$`Leading logFC dim1` <- coords$x
plotdat$`Leading logFC dim2` <- coords$y
ggplot(plotdat, aes(x = `Leading logFC dim1`, y = `Leading logFC dim2`, col = group)) + geom_text(aes(label = sample))
ggplot(plotdat, aes(x = `Leading logFC dim1`, y = `Leading logFC dim2`, color = Exposure, shape = Challenge)) + geom_point()
form <- "~Exposure*Challenge"
mm <- model.matrix(as.formula(form), data = pdata)
y <- voom(d, mm, plot = T)
View(counts)
View(d)
View(mm)
View(pdata)
knitr::opts_chunk$set(echo = F, message = F)
library(dplyr)
library(edgeR)
library(emmeans)
library(knitr)
library(kableExtra)
library(ggplot2)
# project.dir <- "/share/biocore/projects/Miller_L_UCD/Haigh_Miller_Mouse_RNASeq/"
counts <- readRDS("../rnaseq/RData/gse.RDS")
counts <- counts@assays@data$counts
colnames(counts) <- unlist(lapply(strsplit(colnames(counts), split = "_", fixed = T), "[", 1))
anno <- read.delim("mart_export_2021-04-29.txt")
pdata <- read.delim(file.path("pdata.txt"))
pdata$sample <- as.character(pdata$sample)
pdata$Exposure <- unlist(lapply(strsplit(pdata$group, split = " "), `[`, 1))
pdata$Exposure <- relevel(factor(pdata$Exposure), ref = "FA")
pdata$Challenge <- unlist(lapply(strsplit(pdata$group, split = " "), `[`, 2))
pdata$Challenge <- relevel(factor(pdata$Challenge), ref = "PBS")
# Reorder pdata to match colnames of counts
pdata <- left_join(data.frame(sample = colnames(counts)),
pdata)
identical(pdata$sample, colnames(counts))
d0 <- DGEList(counts)
d0 <- calcNormFactors(d0)
# tmp <- as.data.frame(cpm(d0))
# tmp$Gene.stable.ID <- unlist(lapply(strsplit(rownames(tmp), split = ".", fixed = T), `[`, 1))
# tmp <- left_join(tmp, anno)
# tmp <- dplyr::select(tmp, Gene.stable.ID, Gene.name, everything()) %>% select(- Gene.description)
# write.table(tmp, file = "normalized_counts.txt", quote = F, sep = "\t", row.names = F)
cutoff <- 6
drop <- which(apply(cpm(d0), 1, max) < cutoff)
d <- d0[-drop,]
dim(d)
coords <- plotMDS(d, plot = F)
plotdat <- pdata
plotdat$`Leading logFC dim1` <- coords$x
plotdat$`Leading logFC dim2` <- coords$y
ggplot(plotdat, aes(x = `Leading logFC dim1`, y = `Leading logFC dim2`, col = group)) + geom_text(aes(label = sample))
ggplot(plotdat, aes(x = `Leading logFC dim1`, y = `Leading logFC dim2`, color = Exposure, shape = Challenge)) + geom_point()
form <- "~Exposure*Challenge"
mm <- model.matrix(as.formula(form), data = pdata)
y <- voom(d, mm, plot = T)
fit <- lmFit(y, mm)
z <- rnorm(n = nrow(mm))
dummy.mod <- lm(as.formula(paste0("z", form)),
data = pdata)
pairs <- pairs(emmeans(dummy.mod, ~Exposure|Challenge), reverse = T)
contrast.matrix <- pairs@linfct
tmp <- pairs@grid
contrasts <- paste0(tmp$contrast, ", ", tmp$Challenge)
rownames(contrast.matrix) <- contrasts
tables <- lapply(contrasts, function(contr){
cm <- contrast.matrix[contr,]
tmp <- contrasts.fit(fit, contrasts = cm)
tmp <- eBayes(tmp)
tmp2 <- topTable(tmp, n = Inf, sort.by = "P")
tmp2$Gene.stable.ID <- unlist(lapply(strsplit(rownames(tmp2), split = ".", fixed = T), `[`, 1))
tmp2 <- left_join(tmp2, anno)
tmp2 <- dplyr::select(tmp2, Gene.stable.ID, Gene.name, logFC, AveExpr, P.Value, adj.P.Val, Gene.description)
filename <- gsub(" - ", "_v_", contr)
filename <- gsub(", ", "_", filename, fixed = T)
filename <- paste0(filename, ".txt")
write.table(tmp2, file = filename, sep = "\t", quote = F, row.names = F)
tab <- kable(head(tmp2, 100), digits = 5, row.names = F)
header1 <- 7
names(header1) <- paste0("Top 100 genes for ", contr)
header2 <- 7
names(header2) <- paste0("Number of genes with adjusted P < 0.05 = ", length(which(tmp2$adj.P.Val < 0.05)))
header3 <- 7
names(header3) <- paste0("Output file is ", filename)
tab <- tab %>% add_header_above(header3, align = 'l') %>% add_header_above(header2, align = 'l') %>% add_header_above(header1, align = 'l', font_size = "larger", bold = T)
tab <- tab %>% kable_styling() %>% scroll_box(height = "500px")
return(list(tab, nump = length(which(tmp2$adj.P.Val < 0.05))))
})
sigps <- unlist(lapply(tables, function(x)x[[2]]))
sumtab <- data.frame(Comparison = contrasts, `Number of genes with adjusted P < 0.05` = sigps,
check.names = F)
kable(sumtab, align = 'c') %>% kable_styling() %>%
add_header_above(c("Overview of comparison of exposures by challenge" = 2), font_size = "larger", bold = T, align = "l")
tmp <- lapply(tables, function(x)print(x[[1]]))
z <- rnorm(n = nrow(mm))
dummy.mod <- lm(as.formula(paste0("z", form)),
data = pdata)
pairs <- pairs(emmeans(dummy.mod, ~Challenge|Exposure), reverse = T)
contrast.matrix <- pairs@linfct
tmp <- pairs@grid
contrasts <- paste0(tmp$contrast, ", ", tmp$Exposure)
rownames(contrast.matrix) <- contrasts
tables <- lapply(contrasts, function(contr){
cm <- contrast.matrix[contr,]
tmp <- contrasts.fit(fit, contrasts = cm)
tmp <- eBayes(tmp)
tmp2 <- topTable(tmp, n = Inf, sort.by = "P")
tmp2$Gene.stable.ID <- unlist(lapply(strsplit(rownames(tmp2), split = ".", fixed = T), `[`, 1))
tmp2 <- left_join(tmp2, anno)
tmp2 <- dplyr::select(tmp2, Gene.stable.ID, Gene.name, logFC, AveExpr, P.Value, adj.P.Val, Gene.description)
filename <- gsub(" - ", "_v_", contr)
filename <- gsub(", ", "_", filename, fixed = T)
filename <- paste0(filename, ".txt")
write.table(tmp2, file = filename, sep = "\t", quote = F, row.names = F)
tab <- kable(head(tmp2, 100), digits = 5, row.names = F)
header1 <- 7
names(header1) <- paste0("Top 100 genes for ", contr)
header2 <- 7
names(header2) <- paste0("Number of genes with adjusted P < 0.05 = ", length(which(tmp2$adj.P.Val < 0.05)))
header3 <- 7
names(header3) <- paste0("Output file is ", filename)
tab <- tab %>% add_header_above(header3, align = 'l') %>% add_header_above(header2, align = 'l') %>% add_header_above(header1, align = 'l', font_size = "larger", bold = T)
tab <- tab %>% kable_styling() %>% scroll_box(height = "500px")
return(list(tab, nump = length(which(tmp2$adj.P.Val < 0.05))))
})
sigps <- unlist(lapply(tables, function(x)x[[2]]))
sumtab <- data.frame(Comparison = contrasts, `Number of genes with adjusted P < 0.05` = sigps,
check.names = F)
kable(sumtab, align = 'c') %>% kable_styling() %>%
add_header_above(c("Overview of comparison of challenges by exposure" = 2), font_size = "larger", bold = T, align = "l")
tmp <- lapply(tables, function(x)print(x[[1]]))
# Get log fold changes between exposures for each challenge
z <- rnorm(n = nrow(mm))
dummy.mod <- lm(as.formula(paste0("z", form)),
data = pdata)
pairs <- pairs(emmeans(dummy.mod, ~Exposure|Challenge), reverse = T)
contrast.matrix <- pairs@linfct
logFCs <- coef(contrasts.fit(fit, t(contrast.matrix)))
colnames(logFCs) <- c("logFC.PBS", "logFC.LPS")
logFCs <- as.data.frame(logFCs)
logFCs$Gene.stable.ID <- unlist(lapply(strsplit(rownames(logFCs), split = ".", fixed = T), `[`, 1))
z <- rnorm(n = nrow(mm))
dummy.mod <- lm(as.formula(paste0("z", form)),
data = pdata)
pairs0 <- pairs(emmeans(dummy.mod, ~Exposure|Challenge))
pairs <- pairs(pairs0, by = "contrast")
contrast.matrix <- pairs@linfct
contrasts <- "Exposure-challenge interaction"
rownames(contrast.matrix) <- contrasts
tables <- lapply(contrasts, function(contr){
cm <- contrast.matrix[contr,]
tmp <- contrasts.fit(fit, contrasts = cm)
tmp <- eBayes(tmp)
tmp2 <- topTable(tmp, n = Inf, sort.by = "P")
tmp2$Gene.stable.ID <- unlist(lapply(strsplit(rownames(tmp2), split = ".", fixed = T), `[`, 1))
tmp2 <- left_join(tmp2, anno)
tmp2 <- left_join(tmp2, logFCs)
tmp2 <- dplyr::select(tmp2, Gene.stable.ID, Gene.name, logFC.LPS, logFC.PBS, AveExpr, P.Value, adj.P.Val, Gene.description)
filename <- "exposure_challenge_interaction.txt"
write.table(tmp2, file = filename, sep = "\t", quote = F, row.names = F)
tab <- kable(head(tmp2, 100), digits = 5, row.names = F)
header1 <- 8
names(header1) <- paste0("Top 100 genes for ", contr)
header2 <- 8
names(header2) <- paste0("Number of genes with adjusted P < 0.05 = ", length(which(tmp2$adj.P.Val < 0.05)))
header3 <- 8
names(header3) <- paste0("Output file is ", filename)
tab <- tab %>% add_header_above(header3, align = 'l') %>% add_header_above(header2, align = 'l') %>% add_header_above(header1, align = 'l', font_size = "larger", bold = T)
tab <- tab %>% kable_styling() %>% scroll_box(height = "500px")
return(list(tab, nump = length(which(tmp2$adj.P.Val < 0.05))))
})
sigps <- unlist(lapply(tables, function(x)x[[2]]))
sumtab <- data.frame(Comparison = contrasts, `Number of genes with adjusted P < 0.05` = sigps,
check.names = F)
kable(sumtab, align = 'c') %>% kable_styling() %>%
add_header_above(c("Overview of exposure-challenge interaction" = 2), font_size = "larger", bold = T, align = "l")
tmp <- lapply(tables, function(x)print(x[[1]]))
sessionInfo()
View(counts)
knitr::opts_chunk$set(echo = F, message = F)
library(SummarizedExperiment)
library(tximeta)
library(DESeq2)
library(dplyr)
library(ggplot2)
library(readr)
library(pheatmap)
library(kableExtra)
library(topGO)
library(biomaRt)
library(edgeR)
library(statmod)
library(emmeans)
samples <- read_csv("rnaseq_samples.csv")
se <- tximeta(samples)
gse <- summarizeToGene(se)
unsumm_counts <- se@assays@data$counts
summ_counts <- gse@assays@data$counts
write.csv(unsumm_counts, file = "output/data/unsumm_counts.csv")
write.csv(summ_counts, file = "output/data/summ_counts.csv")
counts <- summ_counts
anno <- read.delim("mart_export_2021-04-29.txt")
pdata$sample <- samples$names
v <- c(5,2,5,2.5,2.5,8,25)
v*24
S1 <- c(5, 6, 7)
S2 <- c(43, 0, 3)
df <- data.frame(S1, S2)
df
df1 <- df
remove(df)
rownames(df1) <- c("A", "B", "C")
S3 <- c(13, 12, 11)
S3 <- c(13, 12, 11, 10)
S4 <- c(23, 1, 1, 2)
df2 <- data.frame(S3, S4)
df1
rownames(df2) <- c("B", "C", "D", "E")
df1
df2
outer <- merge(S1, S2, all=TRUE)
left <- merge(S1, S2, all.x=TRUE)
right <- merge(S1, S2, all.y=TRUE)
cross <- merge(S1, S2, by=NULL)
df1
df2
outer
left
right
cross
df1
df2
outer <- merge(S1, S2, all=TRUE)
outer
outer <- merge(S1, S2, by="S1", all=TRUE)
outer <- merge(df1, df2, by="S1", all=TRUE)
outer <- merge(df1, df2, all=TRUE)
outer
cross <- merge(df1, df2, by=NULL)
cross
df1
transpose(df1)
library(data.table)
transpose(df1)
df1_row <- colnames(df1)
df1_col <- rownames(df1)
df1 <- transpose(df1)
rownames(df1) <- df1_riq==ow
rownames(df1) <- df1_row
colnames(df1) <- df1_col
df1
df2_row <- colnames(df2)
df2_col <- rownames(df2)
df2 <- transpose(df2)
df2
rownames(df2) <- df2_row
colnames(df2) <- df2_col
df2
df1
merge(df1, df2, by="B", all=TRUE)
by <- c("B", "C")
merge(df1, df2, by=by, all=TRUE)
df1
df2
intersect(colnames(df1), colnames(df2))
by <- intersect(colnames(df1), colnames(df2))
by
duplicated(by)
c <- c("A", "B", "C", "A")
duplicated(c)
unique(c)
dim(unique(c)) == dim(c)
if (dim(unique(c)) == dim(c));
if (dim(unique(c)) == dim(c));
print("Check")
if (dim(unique(c)) == dim(c)) {
print(TRUE)
}
dim(unique(c))
length(c)
if (length(unique(c)) == length(c)) {
print(TRUE)
}
if (length(unique(c)) != length(c)) {
print(TRUE)
}
setwd("~/ETS04/core_files")
raw <- read.delim("raw_counts.txt")
nor <- read.delim("normalized_counts.txt")
dim(raw)
dim(nor)
head(raw)
head(nor)
setwd("~/Desktop")
setwd("~/")
fem <- read.delim("fem_normalized_counts.txt")
mal <- read.delim("mal_normalized_counts.txt")
head(fem)
head(mal)
head(fem)
head(mal)
sum(duplicated(rownames(fem)))
sum(duplicated(rownames(mal)))
rownames(fem) <- fem$Gene.name
duplicated(fem$Gene.stable.ID)
sum(duplicated(fem$Gene.stable.ID))
sum(duplicated(mal$Gene.stable.ID))
sum(duplicated(mal$Gene.name))
head(fem)
head(mal)
rownames(fem) <- fem$Gene.stable.ID
rownames(mal) <- mal$Gene.stable.ID
head(fem)
head(mal)
colnames(fem)[3]
colnames(fem)[2]
colnames(fem)[3:5]
colnames(fem)[3:]
colnames(fem)[3:ncol(fem)]
fem_keep <- colnames(fem)[3:ncol(fem)]
mal_keep <- colnames(mal)[3:ncol(mal)]
fem <- fem[,fem_keep]
head(fem)
mal <- mal[,mal_keep]
head(mal)
fem_samp <- colnames(fem)
mal_samp <- colnames(mal)
fem_gene <- rownames(fem)
mal_gene <- rownames(mal)
knitr::opts_chunk$set(echo = TRUE)
library(SummarizedExperiment)
library(tximeta)
library(DESeq2)
library(dplyr)
library(ggplot2)
library(readr)
library(pheatmap)
library(kableExtra)
# Using alt_rnaseq_samples.csv because it uses GRCm39 indexed reads
samples <- read_csv("rnaseq_samples.csv")
se <- tximeta(samples)
gse <- summarizeToGene(se)
dds <- DESeqDataSet(se = gse, design = ~condition)
# Only keep genes that have 6 or more reads across all the samples; more restrictive option is 10 where you get fewer DEGs
keep <- rowSums(counts(dds)) >= 6
dds <- dds[keep,]
dds
View(dds)
View(se)
View(gse)
dds <- DESeq(dds)
dds
dds@assays
head(dds@assays$normalizationFactors)
head(dds@assays@normalizationFactors)
View(dds)
head(dds@assays@data@listData$normalizationFactors)
median(dds@assays@data@listData$normalizationFactors[,1])
View(gse)
head(dds@assays@data$counts)
head(cpm(dds))
head(dds@assays@data$counts[,1]/median(dds@assays@data@listData$normalizationFactors[,1]))
head(dds@assays@data$counts[,2]/median(dds@assays@data@listData$normalizationFactors[,2]))
head(dds@assays@data$counts[,3]/median(dds@assays@data@listData$normalizationFactors[,3]))
head(dds@assays@data$counts[,4]/median(dds@assays@data@listData$normalizationFactors[,4]))
head(dds@assays@data$counts[,5]/median(dds@assays@data@listData$normalizationFactors[,5]))
plotPCA(dds)
plotPCA(rlog(dds))
plotPCA(DESeqTransform(se))
head(dds@assays@data$counts[,1]/median(dds@assays@data@listData$normalizationFactors[,1]), n=10)
head(dds@assays@data$counts[,1]/median(dds@assays@data@listData$normalizationFactors[,1]), n=9)
head(dds@assays@data$counts[,2]/median(dds@assays@data@listData$normalizationFactors[,2]), n=9)
head(dds@assays@data$counts[,3]/median(dds@assays@data@listData$normalizationFactors[,3]), n=9)
head(dds@assays@data$counts[,4]/median(dds@assays@data@listData$normalizationFactors[,4]), n=9)
head(dds@assays@data$counts[,5]/median(dds@assays@data@listData$normalizationFactors[,5]), n=9)
head(dds@dispersionFunction(environment()))
head(dds@dispersionFunction(environment(disps)))
head(dds@dispersionFunction(dds))
?dispersionFunction
dispersionFunction(dds)
sd(dds@assays@data$counts[1,])
mean(dds@assays@data$counts[1,])
median(dds@assays@data$counts[1,])
sd(dds@assays@data$counts[3,])
mean(dds@assays@data$counts[3,])
median(dds@assays@data$counts[3,])
View(se)
head(se@assays@data$counts)
dds
dds@elementMetadata
knitr::opts_chunk$set(echo = TRUE)
plotDispEsts(dds)
txt <- c("hee", "haw", "yee", "wah")
grep("ee", txt)
txt[grep("ee", txt)]
regexpr("e", txt)
gregexpr("e", txt)
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/BCA_Analyzer/BCA_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/BCA_Analyzer/BCA_Analyzer.R')
setwd("C:/Users/Diwash Shrestha/Desktop/millerlab_code/BCA_Analyzer")
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/BCA_Analyzer/BCA_Analyzer.R')
setwd("C:/Users/Diwash Shrestha/Desktop/millerlab_code/BCA_Analyzer")
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/BCA_Analyzer/BCA_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/BCA_Analyzer/BCA_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/BCA_Analyzer/BCA_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/BCA_Analyzer/BCA_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/BCA_Analyzer/BCA_Analyzer.R')
setwd("C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer")
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
setwd("C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer")
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
?lm
setwd("C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer")
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
source('C:/Users/Diwash Shrestha/Desktop/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
setwd("//fileserver/Lisa_Miller_Lab/Diwash/millerlab_code/qPCR_Analyzer")
source('//fileserver/Lisa_Miller_Lab/Diwash/millerlab_code/qPCR_Analyzer/qPCR_Analyzer.R')
setwd("C:/Users/Diwash Shrestha/Desktop/qPCR")
source('C:/Users/Diwash Shrestha/Desktop/qPCR/qPCR_Analyzer.R')
setup_info
setup_info <- read.delim("setup_info.xlsx", header = TRUE, sep = ",")
setup_info
setup_info <- read.delim("setup_info.xlsx", header = TRUE, sep = ",")
setup_info <- read.delim("setup_info.csv", header = TRUE, sep = ",")
setup_info
